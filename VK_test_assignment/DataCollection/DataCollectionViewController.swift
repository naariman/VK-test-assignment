//
//  DataCollectionViewController.swift
//  VK Test Assignment
//
//  Created Nariman on 22.03.2024.
//  Copyright © 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Dastan Makhutov @mchutov
//

import UIKit

final class DataCollectionViewController: UIViewController,
                                          DataCollectionViewProtocol {
    
    private struct Constants {
        static let virusImage = AppImage.virusThree.uiImage
        static let groupSizeTitle = "Кол-во людей: [18, 128, 288, 338, 450, 578, 1250]"
        static let infectionFactorTitle = "Коэффициент заражаемости: [ 1 - 10 ]"
        static let recalculationInfectedTitle = "Период пересчета: [ 1 - 9 ]"
        static let continueButtonTitle = "Запустить моделирование"
        static let groupSizePlaceholder = "Например, 128"
        static let infectionFactorPlaceholder = "Сколько соседей может быть заражено"
        static let recalculationInfectedPlaceholder = "Например, 1 секунда"
        
    }
    
    private let virusImageView: UIImageView = {
       let imageView = UIImageView()
        imageView.image = Constants.virusImage
        imageView.clipsToBounds = false
        return imageView
    }()
    
    private let textFieldsStackView: UIStackView = {
        let stackView = UIStackView()
        stackView.distribution = .fillProportionally
        stackView.spacing = 16
        stackView.axis = .vertical
        return stackView
    }()
    
    private let groupSizeTextFieldView: VKTextField = .init(
        title: Constants.groupSizeTitle,
        keyboardType: .numberPad
    )
    private let infectionFactorTextFieldView: VKTextField = .init(
        title: Constants.infectionFactorTitle,
        keyboardType: .numberPad
    )
    private let recalculationInfectedTextFieldView: VKTextField = .init(
        title: Constants.recalculationInfectedTitle,
        keyboardType: .numberPad
    )
    
    var continueButton: VKButton = .init(
        title: Constants.continueButtonTitle,
        titleColor: .white,
        backgroundColor: .main
    )
    
	var presenter: DataCollectionPresenterProtocol?

	override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        configureData()
        addObserversKeyboardAppears()
    }
    
    deinit {
        NotificationCenter.default.removeObserver(
            self,
            name: UIResponder.keyboardWillShowNotification,
            object: nil
        )
        NotificationCenter.default.removeObserver(
            self,
            name: UIResponder.keyboardWillHideNotification,
            object: nil
        )
    }
}

// MARK: - Setup UI
extension DataCollectionViewController {
    func setupUI() {
        view.backgroundColor = .white
        continueButton.disable()
        
        view.addSubviews(
            virusImageView,
            textFieldsStackView,
            continueButton
        )
        
        virusImageView.snp.makeConstraints { make in
            make.top.equalTo(view.safeAreaLayoutGuide.snp.top)
            make.centerX.equalToSuperview()
            make.size.equalTo(100)
        }
        
        textFieldsStackView.snp.makeConstraints { make in
            make.top.equalTo(virusImageView.snp.bottom).offset(32)
            make.leading.trailing.equalToSuperview()
        }
        
        textFieldsStackView.addArrangedSubviews(
            groupSizeTextFieldView,
            infectionFactorTextFieldView,
            recalculationInfectedTextFieldView
        )
        
        continueButton.snp.makeConstraints { make in
            make.bottom.equalTo(-32)
            make.leading.trailing.equalToSuperview().inset(16)
            make.height.equalTo(48)
        }
    }
    
    func configureData() {
        Animations.rotateViewWithPulse(virusImageView)
        continueButton.addTarget(
            self,
            action: #selector(continueDidTap),
            for: .touchUpInside
        )
        setupTextFields()
    }
    
    func setupTextFields() {
        groupSizeTextFieldView.textFieldTextChanged = { [weak self] text in
            self?.presenter?.updateGroupSizeTextFieldView(with: text)
        }
        groupSizeTextFieldView.setPlaceholder(Constants.groupSizePlaceholder)
        infectionFactorTextFieldView.textFieldTextChanged = { [weak self] text in
            self?.presenter?.updateInfectionFactorText(with: text)
        }
        infectionFactorTextFieldView.setPlaceholder(Constants.infectionFactorPlaceholder)
        recalculationInfectedTextFieldView.textFieldTextChanged = { [weak self] text in
            self?.presenter?.updateRecalculationInfected(with: text)
        }
        recalculationInfectedTextFieldView.setPlaceholder(Constants.recalculationInfectedPlaceholder)
    }
}

// MARK: - Keyboard appears process
private extension DataCollectionViewController {
    func addObserversKeyboardAppears() {
        NotificationCenter.default.addObserver(self, selector: #selector(keyboardWillShow(notification:)), name: UIResponder.keyboardWillShowNotification, object: nil)

        NotificationCenter.default.addObserver(self, selector: #selector(keyboardWillHide(notification:)), name: UIResponder.keyboardWillHideNotification, object: nil)
    }
    
    @objc private func keyboardWillShow(
        notification: NSNotification
    ) {
        if let userInfo = notification.userInfo,
           let keyboardFrame = userInfo[UIResponder.keyboardFrameEndUserInfoKey] as? NSValue {
            
            let keyboardSize = keyboardFrame.cgRectValue.size
            let keyboardHeight = keyboardSize.height
            
            UIView.animate(withDuration: 0.3) {
                self.continueButton.snp.updateConstraints { make in
                    make.bottom.equalTo(-keyboardHeight - 8)
                }
                self.view.layoutIfNeeded()
            }
        }
    }

    @objc private func keyboardWillHide(notification: NSNotification) {
        UIView.animate(withDuration: 0.3) {
            self.continueButton.snp.updateConstraints { make in
                make.bottom.equalTo(-32)
            }
            self.view.layoutIfNeeded()
        }
    }
}

// MARK: - Action's
private extension DataCollectionViewController {
    @objc
    func continueDidTap() {
        presenter?.continueDidTap()
    }
}
