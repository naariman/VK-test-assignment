//
//  DataCollectionPresenter.swift
//  VK Test Assignment
//
//  Created Nariman on 22.03.2024.
//  Copyright Â© 2024 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Dastan Makhutov @mchutov
//

import UIKit

final class DataCollectionPresenter {
    weak private var view: DataCollectionViewProtocol?
    var interactor: DataCollectionInteractorProtocol?
    private let router: DataCollectionWireframeProtocol

    private var groupSize: Int?
    private var infectionFactor: Int?
    private var recalculationInfected: Int?
    
    init(
        interface: DataCollectionViewProtocol,
        interactor: DataCollectionInteractorProtocol?,
        router: DataCollectionWireframeProtocol
    ) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
}

extension DataCollectionPresenter: DataCollectionPresenterProtocol {
    func updateGroupSizeTextFieldView(with text: String) {
        groupSize = Int(text)
        observeFieldsCondition()
    }
    
    func updateInfectionFactorText(with text: String) {
        infectionFactor = Int(text)
        observeFieldsCondition()
    }
    
    func updateRecalculationInfected(with text: String) {
        recalculationInfected = Int(text)
        observeFieldsCondition()
    }
}

private extension DataCollectionPresenter {
    func observeFieldsCondition() {
        if groupSize != nil,
           infectionFactor != nil,
           recalculationInfected != nil
        {
            view?.continueButton.enable()
        } else {
            view?.continueButton.disable()
        }
    }
}
